% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InitErgmTerm.operator.R
\name{symmetrize}
\alias{symmetrize}
\alias{symmetrize.default}
\alias{symmetrize.network}
\title{Return a symmetrized version of a binary network}
\usage{
symmetrize(x, rule = c("weak", "strong", "upper", "lower"), ...)

\method{symmetrize}{default}(x, rule = c("weak", "strong", "upper", "lower"),
  ...)

\method{symmetrize}{network}(x, rule = c("weak", "strong", "upper", "lower"),
  ...)
}
\arguments{
\item{x}{an object representing a network.}

\item{rule}{a string specifying how the network is to be
symmetrized; see \code{\link[sna:symmetrize]{sna::symmetrize()}} for details.}

\item{...}{additional arguments to \code{\link[sna:symmetrize]{sna::symmetrize()}}.}
}
\description{
Return a symmetrized version of a binary network
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: The default method, passing the input on to \code{\link[sna:symmetrize]{sna::symmetrize()}}.

\item \code{network}: A method for \code{\link{network}} objects, which preserves network and vertex attributes.
}}

\examples{
data(sampson)
samplike[1,2] <- NA
samplike[4.1] <- NA
sm <- as.matrix(samplike)

tst <- function(x,y){
  mapply(identical, x, y)
}

stopifnot(all(tst(as.logical(as.matrix(symmetrize(samplike, "weak"))), sm | t(sm))),
          all(tst(as.logical(as.matrix(symmetrize(samplike, "strong"))), sm & t(sm))),
          all(tst(c(as.matrix(symmetrize(samplike, "upper"))), sm[cbind(c(pmin(row(sm),col(sm))),c(pmax(row(sm),col(sm))))])),
          all(tst(c(as.matrix(symmetrize(samplike, "lower"))), sm[cbind(c(pmax(row(sm),col(sm))),c(pmin(row(sm),col(sm))))])))
}
