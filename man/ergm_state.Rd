% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ergm_state.R
\name{ergm_state}
\alias{ergm_state}
\alias{ergm_state.ergm_state}
\alias{ergm_state.network}
\alias{is.ergm_state}
\alias{as.edgelist.ergm_state}
\alias{as.matrix.ergm_state}
\alias{as.network.ergm_state}
\alias{network.edgecount.ergm_state}
\alias{network.dyadcount.ergm_state}
\alias{network.size.ergm_state}
\alias{network.naedgecount.ergm_state}
\alias{\%ergmlhs\%.ergm_state}
\alias{\%ergmlhs\%<-.ergm_state}
\alias{as.rlebdm.ergm_state}
\title{A Representation of ERGM state}
\usage{
ergm_state(x, ...)

\method{ergm_state}{ergm_state}(x, nw = NULL, model = NULL, response = NULL, stats = NULL, ...)

\method{ergm_state}{network}(x, model, response = NULL, stats = NULL, ...)

is.ergm_state(x)

\method{as.edgelist}{ergm_state}(x, ...)

\method{as.matrix}{ergm_state}(x, matrix.type = NULL, ...)

\method{as.network}{ergm_state}(x, ..., populate = TRUE)

\method{network.edgecount}{ergm_state}(x, na.omit = TRUE, ...)

\method{network.dyadcount}{ergm_state}(x, na.omit = TRUE, ...)

\method{network.size}{ergm_state}(x, ...)

\method{network.naedgecount}{ergm_state}(x, ...)

\method{\%ergmlhs\%}{ergm_state}(lhs, setting)

\method{\%ergmlhs\%}{ergm_state}(lhs, setting) <- value

\method{as.rlebdm}{ergm_state}(x, ...)
}
\arguments{
\item{nw}{a \code{\link{network}} object.}

\item{model}{an \code{\link{ergm_model}} object.}

\item{response}{a character vector representing the response attribute. If
\code{NULL}, binary network is assumed.}

\item{na.omit}{Whether missing edges should be counted. Note that
missing edge information is not stored.}
}
\value{
At this time, an \code{ergm_state} object is (subject to
change) a list containing the following elements:
\describe{

\item{el}{a \code{\link{tibble}} \code{\link{edgelist}} representing the edge state of the network}

\item{nw0}{a \code{\link{network}} object with all edges removed.}

\item{stats}{a numeric vector of network statistics or some other
statistics used to resume.}}
}
\description{
\code{ergm_state} is an semi-internal class for passing
around results of MCMC sampling, particularly when the result is
used to start another MCMC sampler. It is deliberately loosely
specified, and its structure and even name are subject to change.
}
\section{Methods (by class)}{
\itemize{
\item \code{ergm_state}: a method for updating an ergm_state.

\item \code{network}: a method for constructing an ergm_state from a \code{\link{network}} object.

\item \code{ergm_state}: Note that this method fails when
\code{na.omit=FALSE}, since missing edges are not stored.

\item \code{ergm_state}: Note that this method fails with
its default argument, since missing edges are not stored.

\item \code{ergm_state}: A stub that returns 0.
}}

\keyword{internal}
