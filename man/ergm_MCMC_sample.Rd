% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ergm.getMCMCsample.R
\name{ergm_MCMC_sample}
\alias{ergm_MCMC_sample}
\alias{ergm_MCMC_slave}
\title{Internal Function to Sample Networks and Network Statistics}
\usage{
ergm_MCMC_sample(
  nw,
  model,
  proposal,
  control,
  theta = NULL,
  response = NULL,
  update.nws = TRUE,
  verbose = FALSE,
  ...,
  eta = ergm.eta(theta, model$etamap),
  stats0 = NULL
)

ergm_MCMC_slave(
  state,
  model,
  proposal,
  eta,
  control,
  verbose,
  ...,
  burnin = NULL,
  samplesize = NULL,
  interval = NULL
)
}
\arguments{
\item{nw}{a \code{\link{network}} (or \code{\link{ergm_state}}) object representing the sampler state.}

\item{model}{an \code{\link{ergm_model}} to be sampled from, as returned by
\code{\link[=ergm_model]{ergm_model()}}.}

\item{proposal}{a list of the parameters needed for
Metropolis-Hastings proposals and the result of calling
\code{\link[=ergm_proposal]{ergm_proposal()}}.}

\item{control}{list of MCMC tuning parameters; see
\code{\link[=control.ergm]{control.ergm()}}.}

\item{theta}{the (possibly curved) parameters of the model.}

\item{response}{Name of the edge attribute whose value is to be
modeled in the valued ERGM framework. Defaults to \code{NULL} for
simple presence or absence, modeled via a binary ERGM.}

\item{update.nws}{whether to actually update the network state or
to return an object "promising" to update the network.}

\item{verbose}{verbosity level.}

\item{...}{additional arugments.}

\item{eta}{the natural parameters of the model; by default constructed from \code{theta}.}

\item{stats0}{either a numeric vector of the same length as \code{eta}
containing the statistics corresponding to the initial network;
or a list thereof of the same length as that of \code{nw} if it is a
list of networks (for parallel sampling). Defaults to a vector of
0s.}

\item{burnin, samplesize, interval}{MCMC paramters that can
be used to temporarily override those in the \code{control} list.}
}
\value{
\code{ergm_MCMC_sample} returns a list
containing:
\item{stats}{an \code{\link{mcmc.list}} with sampled statistics.}
\item{networks}{a list of final sampled networks, one for each thread.}
\item{status}{status code, propagated from \code{ergm.mcmcslave}.}
\item{final.interval}{adaptively determined MCMC interval.}

If \code{update.nws==FALSE}, rather than returning the updated networks,
the function will return a \code{\link{ergm_state}}.

\code{ergm_MCMC_slave} returns the MCMC sample as a list of
the following: \item{s}{the matrix of statistics.}
\item{el}{an \code{\link{edgelist}} object for the new network.}
\item{status}{success or failure code: \code{0} is
success, \code{1} for too many edges, and \code{2} for a
Metropolis-Hastings proposal failing.}
}
\description{
This is an internal function, not normally called directly by the
user. The \code{ergm_MCMC_sample} function samples networks and
network statistics using an MCMC algorithm via \code{MCMC_wrapper}
and is caple of running in multiple threads using
\code{ergm_MCMC_slave}.

The \code{ergm_MCMC_slave} function calls the actual C
routine and does minimal preprocessing.
}
\details{
Note that unless \code{stats0} is passed, the returned stats will be relative to the original network, i.e.,
the calling function must shift the statistics if required.
}
\note{
\code{ergm_MCMC_sample} and \code{ergm_MCMC_slave} replace
\code{ergm.getMCMCsample} and \code{ergm.mcmcslave} respectively. They
differ slightly in their argument names and in their return
formats. For example, \code{ergm_MCMC_sample} expects \code{proposal}
rather than \code{MHproposal} and \code{theta} or \code{eta} rather than \code{eta0};
and it does not return \code{statsmatrix} or \code{newnetwork}
elements. Rather, if parallel processing is not in effect,
\code{stats} is an \code{\link{mcmc.list}} with one chain and \code{networks} is a
list with one element.
}
