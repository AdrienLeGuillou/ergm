% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InitErgmTerm.operator.R,
%   R/InitWtErgmTerm.operator.R
\name{Sum-operator-ergmTerm}
\alias{Sum-operator-ergmTerm}
\alias{InitErgmTerm.Sum}
\alias{InitWtErgmTerm.Sum}
\title{A sum (or an arbitrary linear combination) of one or more formulas}
\usage{
# binary: Sum(formulas, label)

# valued: Sum(formulas, label)
}
\arguments{
\item{formulas}{a list of formulas to be used}

\item{label}{used to specify the names of the elements of the resulting term sum vector. If \code{label} is of length 1, it will be recycled with indices appended.}
}
\description{
A sum (or an arbitrary linear combination) of one or more formulas
}
\details{
This operator sums up the RHS statistics of the input formulas elementwise.

If a formula has an LHS, it is interpreted as follows:
\itemize{
\item a numeric scalar: Network statistics of this formula will be multiplied by this.
\item a numeric vector: Corresponding network statistics of this formula will be multiplied by this.
\item a numeric matrix: Vector of network statistics will be pre-multiplied by this.
\item a character string: One of several predefined linear combinations. Currently supported presets are as follows:
\itemize{
\item \code{"sum"} Network statistics of this formula will be summed up; equivalent to \code{matrix(1,1,p)} , where \code{p} is the length of the network statistic vector.
\item \code{"mean"} Network statistics of this formula will be averaged; equivalent to \code{matrix(1/p,1,p)} , where \code{p} is the length of the network statistic vector.
}
}

Note that each formula must either produce the same number of
statistics or be mapped through a matrix to produce the same
number of statistics.

A single formula is also permissible. This can be useful if one
wishes to, say, sum up the statistics returned by a formula.

Curved models are supported, subject to some limitations. In particular, the first model's etamap will be used, overwriting the others. If \code{label} is not of length 1, it should have an \code{attr} -style attribute \code{"curved"} specifying the names for the curved parameters.
}
\concept{operator}
