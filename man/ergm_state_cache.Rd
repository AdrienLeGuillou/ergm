% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel.utils.R
\name{ergm_state_cache}
\alias{ergm_state_cache}
\title{A rudimentary cache for large objects}
\usage{
ergm_state_cache(
  comm = c("all", "clear", "insert", "get", "check", "pass", "list"),
  hash,
  object
)
}
\arguments{
\item{comm}{a character string giving the desired function; partial matching is supported.}

\item{hash}{a character string, typically a \code{\link[=digest]{digest()}} of the object.}

\item{object}{the object to be stored.

Supported tasks are to return all entries, clear the cache, insert
into cache, retrieve an object by hash, check if a hash is
present, or do nothing.

Cache is limited to a hard-coded size (currently 4). This should
accommodate an \code{\link{ergm_model}} and an \code{\link{ergm_proposal}} for
unconstrained and constrained MCMC. When additional objects are
stored, the oldest object is purged and garbage-collected.}
}
\description{
This cache is intended to store large, infrequently changing data
structures such as \code{\link{ergm_model}}s and \code{\link{ergm_proposal}}s on worker
nodes.
}
