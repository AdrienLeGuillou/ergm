% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.node.attr.R
\docType{data}
\name{node-attr-api}
\alias{node-attr-api}
\alias{ergm_get_vattr}
\alias{ERGM_VATTR_SPEC}
\alias{ergm_attr_levels}
\alias{ERGM_LEVELS_SPEC}
\title{Helper functions for specifying nodal attribute levels

These functions are meant to be used in \code{InitErgmTerm} and other
implementations to provide the user with a way to extract nodal
attributes and select their levels in standardized and flexible
ways described under \code{\link{node-attr}}.}
\format{An object of class \code{character} of length 1.}
\usage{
ergm_get_vattr(object, nw, bip = c("n", "b1", "b2"), accept = "character",
  ...)

ERGM_VATTR_SPEC

ergm_attr_levels(object, attr, nw, levels = sort(unique(attr)), ...)

ERGM_LEVELS_SPEC
}
\arguments{
\item{object}{An argument specifying the nodal attribute to select
or which levels to include.}

\item{nw}{Network on the LHS of the formula.}

\item{bip}{Bipartedness mode: affects either length of attribute
vector returned or the length permited: \code{"n"} for full network,
\code{"b1"} for first mode of a bipartite network, and \code{"b2"} for the
second.}

\item{accept}{A character vector listing permitted data types for
the output. See the Details section for the specification.}

\item{...}{Additional argument to the functions of network or to
the formula's environment.}

\item{attr}{A vector of length equal to the number of nodes,
specifying the attribute vector.}

\item{levels}{Starting set of levels to use; defaults to the sorted
list of unique attributes.}
}
\value{
A vector of length equal to the number of nodes giving the
selected attribute function. It may also have an attribute
\code{"name"}, which controls the suggested name of the attribute
combination.

A vector of levels to use and their order.
}
\description{
\code{ergm_get_vattr} extracts and processes the specified
nodal attribute vector. It is strongly recommended that
\code{\link[=check.ErgmTerm]{check.ErgmTerm()}}'s corresponding
\code{vartype="function,formula,character"} (using the
\code{ERGM_VATTR_SPEC} constant).

\code{ergm_attr_levels} filters the levels of the
attribute.  It is strongly recommended that \code{\link[=check.ErgmTerm]{check.ErgmTerm()}}'s
corresponding
\code{vartype="function,formula,character,numeric,logical,NULL"} (using the
\code{ERGM_LEVELS_SPEC} constant).
}
\details{
The \code{accept} argument is meant to allow the user to
quickly check whether the output is of an \emph{acceptable} class or
mode. Typically, if a term accepts a character (i.e.,
categorical) attribute, it will also accept a numeric one,
treating each number as a category label. For this reason, the
following outputs are defined:
\describe{

\item{\code{"character"}}{Accept any mode or class (since it can
beconverted to character).}

\item{\code{"numeric"}}{Accept real, integer, or logical.}

\item{\code{"logical"}}{Accept logical.}

\item{\code{"integer"}}{Accept integer or logical.}

\item{\code{"natural"}}{Accept a strictly positive integer.}

\item{\code{"0natural"}}{Accept a nonnegative integer or logical.}

\item{\code{"nonnegative"}}{Accept a nonnegative number or logical.}

\item{\code{"positive"}}{Accept a strictly positive number or logical.}
}
}
\keyword{datasets}
